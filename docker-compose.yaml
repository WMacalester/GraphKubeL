version: "3.8"

services:
  inventory_db:
    image: redis:8.0-M02-alpine
    env_file:
      - ./inventory.env
    ports:
      - "${INV_DB_PORT}:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 2s
      retries: 5
      start_period: 2s
      timeout: 1s
    volumes:
      - inventory_db:/data

  inventory-service:
    image: inventory-service
    env_file:
      - ./inventory.env
    environment:
      - INV_DB_PORT=${INV_DB_PORT}
      - INV_SERVICE_PORT=${INV_SERVICE_PORT}
    ports:
      - "${INV_SERVICE_PORT}:8080"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f -s http://inventory-service:8080/health",
        ]
      interval: 2s
      retries: 2
      start_period: 2s
      timeout: 1s
    depends_on:
      inventory_db:
        condition: service_healthy

  product_db:
    image: postgres:15
    env_file:
      - ./product.env
    ports:
      - "${PRODUCT_DB_PORT}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$PRODUCT_PG_USER -d $$PRODUCT_PG_DATABASE",
        ]
      interval: 2s
      retries: 5
      start_period: 2s
      timeout: 1s
    volumes:
      - product_db:/var/lib/postgresql/data

  product-service:
    env_file:
      - ./product.env
    environment:
      - PRODUCT_DB_PORT=${PRODUCT_DB_PORT}
      - PRODUCT_SERVICE_PORT=${PRODUCT_SERVICE_PORT}
    image: product-service
    ports:
      - "${PRODUCT_SERVICE_PORT}:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f -s http://product-service:8080/health"]
      interval: 2s
      retries: 5
      start_period: 2s
      timeout: 1s
    depends_on:
      product_db:
        condition: service_healthy

volumes:
  product_db:
  inventory_db:
