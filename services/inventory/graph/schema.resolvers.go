package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"fmt"
	"strconv"
)

// SetProductInventory is the resolver for the setProductInventory field.
func (r *mutationResolver) SetProductInventory(ctx context.Context, input *UpdateProductInventory) (*ProductInventory, error) {
	val, err := r.Repository.SetProductInventory(ctx, strconv.Itoa(input.ID), *input.Value)
	return &ProductInventory{ID: input.ID, Value: &val}, err
}

// GetProductInventory is the resolver for the getProductInventory field.
func (r *queryResolver) GetProductInventory(ctx context.Context, id int) (*ProductInventory, error) {
	val, err := r.Repository.GetProductInventory(ctx, strconv.Itoa(id))

	if err != nil {
		return nil, fmt.Errorf("key was not found in database")
	}

	return &ProductInventory{ID: id, Value: &val}, err
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
